name: Code Coverage

on:
  workflow_dispatch:  # Required for manual/API triggering
    inputs:
      branch:
        description: 'Branch to run coverage on'
        required: false
        default: 'main'
        type: string
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, feature/* ]

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}
        fetch-depth: 0

    # 2. Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    # 3. Install dependencies
    - name: Install dependencies
      run: npm ci

    # 4. Run tests with coverage (force success)
    - name: Run tests with coverage
      run: |
        npm run test:coverage -- --watchAll=false || true
        echo "Tests completed (exit code ignored for coverage purposes)"

    # 5. Verify coverage directory exists
    - name: Verify coverage generation
      run: |
        if [ -d "coverage" ]; then
          echo "✅ Coverage directory created successfully"
          echo "📁 Coverage directory contents:"
          ls -la coverage/ || echo "Directory exists but is empty"
        else
          echo "❌ Coverage directory not found"
          echo "Creating empty coverage directory for artifact upload"
          mkdir -p coverage
          echo "No coverage data generated" > coverage/README.md
        fi

    # 6. Upload coverage folder as artifact (always succeeds)
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ github.run_number }}
        path: coverage
        retention-days: 7
      if: always()

    # 7. Final success message
    - name: Workflow completed successfully
      run: |
        echo "🎉 Coverage workflow completed successfully!"
        echo "📊 Coverage report available in artifacts"
        echo "🌿 Branch: ${{ github.event.inputs.branch || github.ref_name }}"

      if: always()

